//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Omail
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class OmailEntities1 : DbContext
    {
        public OmailEntities1()
            : base("name=OmailEntities1")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Department> Departments { get; set; }
        public virtual DbSet<Email> Emails { get; set; }
        public virtual DbSet<EmpGroup> EmpGroups { get; set; }
        public virtual DbSet<Employee> Employees { get; set; }
        public virtual DbSet<Organization> Organizations { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<Employee_has_Email> Employee_has_Email { get; set; }
        public virtual DbSet<Employee_In_Group> Employee_In_Group { get; set; }
        public virtual DbSet<Organization_has_Partner> Organization_has_Partner { get; set; }
    
        public virtual int AddDepartment(string depName)
        {
            var depNameParameter = depName != null ?
                new ObjectParameter("DepName", depName) :
                new ObjectParameter("DepName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddDepartment", depNameParameter);
        }
    
        public virtual int AddEmail(Nullable<int> empId, string e_Subject, string body, Nullable<bool> isPublicEmail, Nullable<bool> isGroupMail, Nullable<bool> isPrivateEmail, Nullable<int> parent, string sentToList)
        {
            var empIdParameter = empId.HasValue ?
                new ObjectParameter("EmpId", empId) :
                new ObjectParameter("EmpId", typeof(int));
    
            var e_SubjectParameter = e_Subject != null ?
                new ObjectParameter("E_Subject", e_Subject) :
                new ObjectParameter("E_Subject", typeof(string));
    
            var bodyParameter = body != null ?
                new ObjectParameter("Body", body) :
                new ObjectParameter("Body", typeof(string));
    
            var isPublicEmailParameter = isPublicEmail.HasValue ?
                new ObjectParameter("IsPublicEmail", isPublicEmail) :
                new ObjectParameter("IsPublicEmail", typeof(bool));
    
            var isGroupMailParameter = isGroupMail.HasValue ?
                new ObjectParameter("IsGroupMail", isGroupMail) :
                new ObjectParameter("IsGroupMail", typeof(bool));
    
            var isPrivateEmailParameter = isPrivateEmail.HasValue ?
                new ObjectParameter("IsPrivateEmail", isPrivateEmail) :
                new ObjectParameter("IsPrivateEmail", typeof(bool));
    
            var parentParameter = parent.HasValue ?
                new ObjectParameter("Parent", parent) :
                new ObjectParameter("Parent", typeof(int));
    
            var sentToListParameter = sentToList != null ?
                new ObjectParameter("SentToList", sentToList) :
                new ObjectParameter("SentToList", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddEmail", empIdParameter, e_SubjectParameter, bodyParameter, isPublicEmailParameter, isGroupMailParameter, isPrivateEmailParameter, parentParameter, sentToListParameter);
        }
    
        public virtual int AddEmpGroup(string groupName)
        {
            var groupNameParameter = groupName != null ?
                new ObjectParameter("GroupName", groupName) :
                new ObjectParameter("GroupName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddEmpGroup", groupNameParameter);
        }
    
        public virtual int AddEmployee(string empName, string firstName, string lastName, string empEmail, Nullable<System.DateTime> birthDate, string phoneNumber, string hash, string orgCode, string gender, Nullable<bool> loginStatus, Nullable<bool> isAdmin, Nullable<bool> inGroup, Nullable<bool> isGroupManager, Nullable<bool> isOrgManager, Nullable<int> orgId, Nullable<int> depId)
        {
            var empNameParameter = empName != null ?
                new ObjectParameter("EmpName", empName) :
                new ObjectParameter("EmpName", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var empEmailParameter = empEmail != null ?
                new ObjectParameter("EmpEmail", empEmail) :
                new ObjectParameter("EmpEmail", typeof(string));
    
            var birthDateParameter = birthDate.HasValue ?
                new ObjectParameter("BirthDate", birthDate) :
                new ObjectParameter("BirthDate", typeof(System.DateTime));
    
            var phoneNumberParameter = phoneNumber != null ?
                new ObjectParameter("PhoneNumber", phoneNumber) :
                new ObjectParameter("PhoneNumber", typeof(string));
    
            var hashParameter = hash != null ?
                new ObjectParameter("Hash", hash) :
                new ObjectParameter("Hash", typeof(string));
    
            var orgCodeParameter = orgCode != null ?
                new ObjectParameter("OrgCode", orgCode) :
                new ObjectParameter("OrgCode", typeof(string));
    
            var genderParameter = gender != null ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(string));
    
            var loginStatusParameter = loginStatus.HasValue ?
                new ObjectParameter("loginStatus", loginStatus) :
                new ObjectParameter("loginStatus", typeof(bool));
    
            var isAdminParameter = isAdmin.HasValue ?
                new ObjectParameter("IsAdmin", isAdmin) :
                new ObjectParameter("IsAdmin", typeof(bool));
    
            var inGroupParameter = inGroup.HasValue ?
                new ObjectParameter("InGroup", inGroup) :
                new ObjectParameter("InGroup", typeof(bool));
    
            var isGroupManagerParameter = isGroupManager.HasValue ?
                new ObjectParameter("IsGroupManager", isGroupManager) :
                new ObjectParameter("IsGroupManager", typeof(bool));
    
            var isOrgManagerParameter = isOrgManager.HasValue ?
                new ObjectParameter("IsOrgManager", isOrgManager) :
                new ObjectParameter("IsOrgManager", typeof(bool));
    
            var orgIdParameter = orgId.HasValue ?
                new ObjectParameter("OrgId", orgId) :
                new ObjectParameter("OrgId", typeof(int));
    
            var depIdParameter = depId.HasValue ?
                new ObjectParameter("DepId", depId) :
                new ObjectParameter("DepId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddEmployee", empNameParameter, firstNameParameter, lastNameParameter, empEmailParameter, birthDateParameter, phoneNumberParameter, hashParameter, orgCodeParameter, genderParameter, loginStatusParameter, isAdminParameter, inGroupParameter, isGroupManagerParameter, isOrgManagerParameter, orgIdParameter, depIdParameter);
        }
    
        public virtual int AddEmpToGroup(Nullable<int> empId, Nullable<int> groupId, string projectName)
        {
            var empIdParameter = empId.HasValue ?
                new ObjectParameter("EmpId", empId) :
                new ObjectParameter("EmpId", typeof(int));
    
            var groupIdParameter = groupId.HasValue ?
                new ObjectParameter("GroupId", groupId) :
                new ObjectParameter("GroupId", typeof(int));
    
            var projectNameParameter = projectName != null ?
                new ObjectParameter("ProjectName", projectName) :
                new ObjectParameter("ProjectName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddEmpToGroup", empIdParameter, groupIdParameter, projectNameParameter);
        }
    
        public virtual int AddOrganization(string orgName, Nullable<System.DateTime> establishDate, string vision_Statement, string orgType, Nullable<bool> hasOrgCode)
        {
            var orgNameParameter = orgName != null ?
                new ObjectParameter("OrgName", orgName) :
                new ObjectParameter("OrgName", typeof(string));
    
            var establishDateParameter = establishDate.HasValue ?
                new ObjectParameter("EstablishDate", establishDate) :
                new ObjectParameter("EstablishDate", typeof(System.DateTime));
    
            var vision_StatementParameter = vision_Statement != null ?
                new ObjectParameter("Vision_Statement", vision_Statement) :
                new ObjectParameter("Vision_Statement", typeof(string));
    
            var orgTypeParameter = orgType != null ?
                new ObjectParameter("OrgType", orgType) :
                new ObjectParameter("OrgType", typeof(string));
    
            var hasOrgCodeParameter = hasOrgCode.HasValue ?
                new ObjectParameter("HasOrgCode", hasOrgCode) :
                new ObjectParameter("HasOrgCode", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddOrganization", orgNameParameter, establishDateParameter, vision_StatementParameter, orgTypeParameter, hasOrgCodeParameter);
        }
    
        public virtual int AddOrgPartner(Nullable<int> orgId, Nullable<int> partnerId, string sharedVision)
        {
            var orgIdParameter = orgId.HasValue ?
                new ObjectParameter("OrgId", orgId) :
                new ObjectParameter("OrgId", typeof(int));
    
            var partnerIdParameter = partnerId.HasValue ?
                new ObjectParameter("PartnerId", partnerId) :
                new ObjectParameter("PartnerId", typeof(int));
    
            var sharedVisionParameter = sharedVision != null ?
                new ObjectParameter("SharedVision", sharedVision) :
                new ObjectParameter("SharedVision", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddOrgPartner", orgIdParameter, partnerIdParameter, sharedVisionParameter);
        }
    
        public virtual int DeleteDepartment(Nullable<int> depId)
        {
            var depIdParameter = depId.HasValue ?
                new ObjectParameter("DepId", depId) :
                new ObjectParameter("DepId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteDepartment", depIdParameter);
        }
    
        public virtual int DeleteEmail(Nullable<int> emailId)
        {
            var emailIdParameter = emailId.HasValue ?
                new ObjectParameter("EmailId", emailId) :
                new ObjectParameter("EmailId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteEmail", emailIdParameter);
        }
    
        public virtual int DeleteEmpGroup(Nullable<int> groupId)
        {
            var groupIdParameter = groupId.HasValue ?
                new ObjectParameter("GroupId", groupId) :
                new ObjectParameter("GroupId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteEmpGroup", groupIdParameter);
        }
    
        public virtual int DeleteEmployee(Nullable<int> empId)
        {
            var empIdParameter = empId.HasValue ?
                new ObjectParameter("EmpId", empId) :
                new ObjectParameter("EmpId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteEmployee", empIdParameter);
        }
    
        public virtual int DeleteOrganization(Nullable<int> orgId)
        {
            var orgIdParameter = orgId.HasValue ?
                new ObjectParameter("OrgId", orgId) :
                new ObjectParameter("OrgId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteOrganization", orgIdParameter);
        }
    
        public virtual ObjectResult<GetDepartment_Result> GetDepartment(Nullable<int> depId)
        {
            var depIdParameter = depId.HasValue ?
                new ObjectParameter("DepId", depId) :
                new ObjectParameter("DepId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDepartment_Result>("GetDepartment", depIdParameter);
        }
    
        public virtual ObjectResult<GetDepartments_Result> GetDepartments()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDepartments_Result>("GetDepartments");
        }
    
        public virtual ObjectResult<GetEmail_Result> GetEmail(Nullable<int> emailId)
        {
            var emailIdParameter = emailId.HasValue ?
                new ObjectParameter("EmailId", emailId) :
                new ObjectParameter("EmailId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEmail_Result>("GetEmail", emailIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> GetEmailsByTime(Nullable<int> empId, Nullable<System.DateTime> date)
        {
            var empIdParameter = empId.HasValue ?
                new ObjectParameter("EmpId", empId) :
                new ObjectParameter("EmpId", typeof(int));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetEmailsByTime", empIdParameter, dateParameter);
        }
    
        public virtual ObjectResult<GetEmailsSentByEmployees_Result> GetEmailsSentByEmployees(Nullable<int> empId)
        {
            var empIdParameter = empId.HasValue ?
                new ObjectParameter("EmpId", empId) :
                new ObjectParameter("EmpId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEmailsSentByEmployees_Result>("GetEmailsSentByEmployees", empIdParameter);
        }
    
        public virtual ObjectResult<GetEmpGroup_Result> GetEmpGroup(Nullable<int> groupId)
        {
            var groupIdParameter = groupId.HasValue ?
                new ObjectParameter("GroupId", groupId) :
                new ObjectParameter("GroupId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEmpGroup_Result>("GetEmpGroup", groupIdParameter);
        }
    
        public virtual ObjectResult<GetEmpGroups_Result> GetEmpGroups()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEmpGroups_Result>("GetEmpGroups");
        }
    
        public virtual ObjectResult<GetEmployee_Result> GetEmployee(Nullable<int> empId)
        {
            var empIdParameter = empId.HasValue ?
                new ObjectParameter("EmpId", empId) :
                new ObjectParameter("EmpId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEmployee_Result>("GetEmployee", empIdParameter);
        }
    
        public virtual ObjectResult<GetEmployeeEmails_Result> GetEmployeeEmails(Nullable<int> empId)
        {
            var empIdParameter = empId.HasValue ?
                new ObjectParameter("EmpId", empId) :
                new ObjectParameter("EmpId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEmployeeEmails_Result>("GetEmployeeEmails", empIdParameter);
        }
    
        public virtual ObjectResult<GetEmployees_Result> GetEmployees()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEmployees_Result>("GetEmployees");
        }
    
        public virtual ObjectResult<GetEmployeeSeenEmails_Result> GetEmployeeSeenEmails(Nullable<int> empId)
        {
            var empIdParameter = empId.HasValue ?
                new ObjectParameter("EmpId", empId) :
                new ObjectParameter("EmpId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEmployeeSeenEmails_Result>("GetEmployeeSeenEmails", empIdParameter);
        }
    
        public virtual ObjectResult<GetEmployeeSnoozedEmails_Result> GetEmployeeSnoozedEmails(Nullable<int> empId)
        {
            var empIdParameter = empId.HasValue ?
                new ObjectParameter("EmpId", empId) :
                new ObjectParameter("EmpId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEmployeeSnoozedEmails_Result>("GetEmployeeSnoozedEmails", empIdParameter);
        }
    
        public virtual ObjectResult<GetEmployeeSpamEmails_Result> GetEmployeeSpamEmails(Nullable<int> empId)
        {
            var empIdParameter = empId.HasValue ?
                new ObjectParameter("EmpId", empId) :
                new ObjectParameter("EmpId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEmployeeSpamEmails_Result>("GetEmployeeSpamEmails", empIdParameter);
        }
    
        public virtual ObjectResult<GetEmployeeStarredEmails_Result> GetEmployeeStarredEmails(Nullable<int> empId)
        {
            var empIdParameter = empId.HasValue ?
                new ObjectParameter("EmpId", empId) :
                new ObjectParameter("EmpId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEmployeeStarredEmails_Result>("GetEmployeeStarredEmails", empIdParameter);
        }
    
        public virtual ObjectResult<GetOrganization_Result> GetOrganization(Nullable<int> orgId)
        {
            var orgIdParameter = orgId.HasValue ?
                new ObjectParameter("OrgId", orgId) :
                new ObjectParameter("OrgId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetOrganization_Result>("GetOrganization", orgIdParameter);
        }
    
        public virtual ObjectResult<GetOrganizations_Result> GetOrganizations()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetOrganizations_Result>("GetOrganizations");
        }
    
        public virtual int MarkEmailAsDeleted(Nullable<int> empId, Nullable<int> emailId)
        {
            var empIdParameter = empId.HasValue ?
                new ObjectParameter("EmpId", empId) :
                new ObjectParameter("EmpId", typeof(int));
    
            var emailIdParameter = emailId.HasValue ?
                new ObjectParameter("EmailId", emailId) :
                new ObjectParameter("EmailId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MarkEmailAsDeleted", empIdParameter, emailIdParameter);
        }
    
        public virtual int MarkEmailAsSeen(Nullable<int> empId, Nullable<int> emailId)
        {
            var empIdParameter = empId.HasValue ?
                new ObjectParameter("EmpId", empId) :
                new ObjectParameter("EmpId", typeof(int));
    
            var emailIdParameter = emailId.HasValue ?
                new ObjectParameter("EmailId", emailId) :
                new ObjectParameter("EmailId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MarkEmailAsSeen", empIdParameter, emailIdParameter);
        }
    
        public virtual int MarkEmailAsSnoozed(Nullable<int> empId, Nullable<int> emailId)
        {
            var empIdParameter = empId.HasValue ?
                new ObjectParameter("EmpId", empId) :
                new ObjectParameter("EmpId", typeof(int));
    
            var emailIdParameter = emailId.HasValue ?
                new ObjectParameter("EmailId", emailId) :
                new ObjectParameter("EmailId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MarkEmailAsSnoozed", empIdParameter, emailIdParameter);
        }
    
        public virtual int MarkEmailAsSpam(Nullable<int> empId, Nullable<int> emailId)
        {
            var empIdParameter = empId.HasValue ?
                new ObjectParameter("EmpId", empId) :
                new ObjectParameter("EmpId", typeof(int));
    
            var emailIdParameter = emailId.HasValue ?
                new ObjectParameter("EmailId", emailId) :
                new ObjectParameter("EmailId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MarkEmailAsSpam", empIdParameter, emailIdParameter);
        }
    
        public virtual int MarkEmailAsStarred(Nullable<int> empId, Nullable<int> emailId)
        {
            var empIdParameter = empId.HasValue ?
                new ObjectParameter("EmpId", empId) :
                new ObjectParameter("EmpId", typeof(int));
    
            var emailIdParameter = emailId.HasValue ?
                new ObjectParameter("EmailId", emailId) :
                new ObjectParameter("EmailId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MarkEmailAsStarred", empIdParameter, emailIdParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int UpdateDepartment(Nullable<int> depId, string depName)
        {
            var depIdParameter = depId.HasValue ?
                new ObjectParameter("DepId", depId) :
                new ObjectParameter("DepId", typeof(int));
    
            var depNameParameter = depName != null ?
                new ObjectParameter("DepName", depName) :
                new ObjectParameter("DepName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateDepartment", depIdParameter, depNameParameter);
        }
    
        public virtual int UpdateEmail(Nullable<int> emailId, Nullable<int> empId, string e_Subject, string body, Nullable<bool> isPublicEmail, Nullable<bool> isGroupMail, Nullable<bool> isPrivateEmail, Nullable<int> parent, string sentToList)
        {
            var emailIdParameter = emailId.HasValue ?
                new ObjectParameter("EmailId", emailId) :
                new ObjectParameter("EmailId", typeof(int));
    
            var empIdParameter = empId.HasValue ?
                new ObjectParameter("EmpId", empId) :
                new ObjectParameter("EmpId", typeof(int));
    
            var e_SubjectParameter = e_Subject != null ?
                new ObjectParameter("E_Subject", e_Subject) :
                new ObjectParameter("E_Subject", typeof(string));
    
            var bodyParameter = body != null ?
                new ObjectParameter("Body", body) :
                new ObjectParameter("Body", typeof(string));
    
            var isPublicEmailParameter = isPublicEmail.HasValue ?
                new ObjectParameter("IsPublicEmail", isPublicEmail) :
                new ObjectParameter("IsPublicEmail", typeof(bool));
    
            var isGroupMailParameter = isGroupMail.HasValue ?
                new ObjectParameter("IsGroupMail", isGroupMail) :
                new ObjectParameter("IsGroupMail", typeof(bool));
    
            var isPrivateEmailParameter = isPrivateEmail.HasValue ?
                new ObjectParameter("IsPrivateEmail", isPrivateEmail) :
                new ObjectParameter("IsPrivateEmail", typeof(bool));
    
            var parentParameter = parent.HasValue ?
                new ObjectParameter("Parent", parent) :
                new ObjectParameter("Parent", typeof(int));
    
            var sentToListParameter = sentToList != null ?
                new ObjectParameter("SentToList", sentToList) :
                new ObjectParameter("SentToList", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateEmail", emailIdParameter, empIdParameter, e_SubjectParameter, bodyParameter, isPublicEmailParameter, isGroupMailParameter, isPrivateEmailParameter, parentParameter, sentToListParameter);
        }
    
        public virtual int UpdateEmpGroup(Nullable<int> groupId, string groupName)
        {
            var groupIdParameter = groupId.HasValue ?
                new ObjectParameter("GroupId", groupId) :
                new ObjectParameter("GroupId", typeof(int));
    
            var groupNameParameter = groupName != null ?
                new ObjectParameter("GroupName", groupName) :
                new ObjectParameter("GroupName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateEmpGroup", groupIdParameter, groupNameParameter);
        }
    
        public virtual int UpdateEmployee(Nullable<int> empId, string empName, string firstName, string lastName, string empEmail, Nullable<System.DateTime> birthDate, string phoneNumber, string orgCode, string gender, Nullable<bool> loginStatus, Nullable<bool> isAdmin, Nullable<bool> inGroup, Nullable<bool> isGroupManager, Nullable<bool> isOrgManager, Nullable<int> orgId, Nullable<int> depId)
        {
            var empIdParameter = empId.HasValue ?
                new ObjectParameter("EmpId", empId) :
                new ObjectParameter("EmpId", typeof(int));
    
            var empNameParameter = empName != null ?
                new ObjectParameter("EmpName", empName) :
                new ObjectParameter("EmpName", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var empEmailParameter = empEmail != null ?
                new ObjectParameter("EmpEmail", empEmail) :
                new ObjectParameter("EmpEmail", typeof(string));
    
            var birthDateParameter = birthDate.HasValue ?
                new ObjectParameter("BirthDate", birthDate) :
                new ObjectParameter("BirthDate", typeof(System.DateTime));
    
            var phoneNumberParameter = phoneNumber != null ?
                new ObjectParameter("PhoneNumber", phoneNumber) :
                new ObjectParameter("PhoneNumber", typeof(string));
    
            var orgCodeParameter = orgCode != null ?
                new ObjectParameter("OrgCode", orgCode) :
                new ObjectParameter("OrgCode", typeof(string));
    
            var genderParameter = gender != null ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(string));
    
            var loginStatusParameter = loginStatus.HasValue ?
                new ObjectParameter("loginStatus", loginStatus) :
                new ObjectParameter("loginStatus", typeof(bool));
    
            var isAdminParameter = isAdmin.HasValue ?
                new ObjectParameter("IsAdmin", isAdmin) :
                new ObjectParameter("IsAdmin", typeof(bool));
    
            var inGroupParameter = inGroup.HasValue ?
                new ObjectParameter("InGroup", inGroup) :
                new ObjectParameter("InGroup", typeof(bool));
    
            var isGroupManagerParameter = isGroupManager.HasValue ?
                new ObjectParameter("IsGroupManager", isGroupManager) :
                new ObjectParameter("IsGroupManager", typeof(bool));
    
            var isOrgManagerParameter = isOrgManager.HasValue ?
                new ObjectParameter("IsOrgManager", isOrgManager) :
                new ObjectParameter("IsOrgManager", typeof(bool));
    
            var orgIdParameter = orgId.HasValue ?
                new ObjectParameter("OrgId", orgId) :
                new ObjectParameter("OrgId", typeof(int));
    
            var depIdParameter = depId.HasValue ?
                new ObjectParameter("DepId", depId) :
                new ObjectParameter("DepId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateEmployee", empIdParameter, empNameParameter, firstNameParameter, lastNameParameter, empEmailParameter, birthDateParameter, phoneNumberParameter, orgCodeParameter, genderParameter, loginStatusParameter, isAdminParameter, inGroupParameter, isGroupManagerParameter, isOrgManagerParameter, orgIdParameter, depIdParameter);
        }
    
        public virtual int UpdateOrganization(Nullable<int> orgId, string orgName, Nullable<System.DateTime> establishDate, string vision_Statement, string orgType, Nullable<bool> hasOrgCode)
        {
            var orgIdParameter = orgId.HasValue ?
                new ObjectParameter("OrgId", orgId) :
                new ObjectParameter("OrgId", typeof(int));
    
            var orgNameParameter = orgName != null ?
                new ObjectParameter("OrgName", orgName) :
                new ObjectParameter("OrgName", typeof(string));
    
            var establishDateParameter = establishDate.HasValue ?
                new ObjectParameter("EstablishDate", establishDate) :
                new ObjectParameter("EstablishDate", typeof(System.DateTime));
    
            var vision_StatementParameter = vision_Statement != null ?
                new ObjectParameter("Vision_Statement", vision_Statement) :
                new ObjectParameter("Vision_Statement", typeof(string));
    
            var orgTypeParameter = orgType != null ?
                new ObjectParameter("OrgType", orgType) :
                new ObjectParameter("OrgType", typeof(string));
    
            var hasOrgCodeParameter = hasOrgCode.HasValue ?
                new ObjectParameter("HasOrgCode", hasOrgCode) :
                new ObjectParameter("HasOrgCode", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateOrganization", orgIdParameter, orgNameParameter, establishDateParameter, vision_StatementParameter, orgTypeParameter, hasOrgCodeParameter);
        }
    
        public virtual ObjectResult<GetEmails_Result> GetEmails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEmails_Result>("GetEmails");
        }
    }
}
